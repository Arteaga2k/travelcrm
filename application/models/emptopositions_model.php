<?phpinclude_once APPPATH."libraries/core/Docmodel.php";class Emptopositions_model extends Docmodel{	public function __construct(){		parent::__construct();	}		public function get_ds(){		$this->db->select('SQL_CALC_FOUND_ROWS _documents.rid, 							DATE_FORMAT(_emp_to_positions_headers.date_doc, \'%d.%m.%Y\') as date_doc, 							_emp_to_positions_rows._employeers_rid as _employeers_rid,							_emp_to_positions_rows._positions_rid as _positions_rid,							DATE_FORMAT(_emp_to_positions_rows.bdate, \'%d.%m.%Y\') as bdate,							CONCAT(_employeers.l_name,\' \',_employeers.f_name) as employeer_name,							_positions.name as position_name,							_filials.name as filial_name,							DATE_FORMAT(_documents.modifyDT, \'%d.%m.%Y\') as modifyDT, 							_documents.descr as descr, _documents.archive', False);		$this->db->from('_documents');		$this->db->join('_emp_to_positions_headers', '_emp_to_positions_headers._documents_rid = _documents.rid');		$this->db->join('_emp_to_positions_rows', '_emp_to_positions_rows._emp_to_positions_headers_rid = _emp_to_positions_headers.rid');		$this->db->join('_employeers', '_emp_to_positions_rows._employeers_rid = _employeers.rid');		$this->db->join('_filials', '_emp_to_positions_rows._filials_rid = _filials.rid','LEFT');		$this->db->join('_positions', '_emp_to_positions_rows._positions_rid = _positions.rid');		$this->db->group_by('_documents.rid');		$this->db->where(array('_documents.doc_type'=>$this->ci->get_typedoc()));		if($searchRule = element('like', $this->ci->get_session('searchrule'), null)) $this->db->like($searchRule);		if($searchRule = element('where', $this->ci->get_session('searchrule'), null)) $this->db->where($searchRule);		if($sort = $this->ci->get_session('sort'))	$this->db->orderby($sort['c'], $sort['r']);		$this->db->limit($this->ci->config->item('crm_grid_limit'), element('p', $this->ci->a_uri_assoc, null));		$query = $this->db_get('_documents');		return $query->num_rows()?$query->result():array();	}			public function get_edit($rid){		$this->db->select('_documents.rid, 							DATE_FORMAT(_emp_to_positions_headers.date_doc, \'%d.%m.%Y\') as date_doc,							_emp_to_positions_rows._employeers_rid as _employeers_rid,							_emp_to_positions_rows._positions_rid as _positions_rid,							_emp_to_positions_rows._currencies_rid as _currencies_rid,							_emp_to_positions_rows.salary as salary,							DATE_FORMAT(_emp_to_positions_rows.bdate, \'%d.%m.%Y\') as bdate,							CONCAT(_employeers.f_name,\' \',_employeers.s_name,\' \',_employeers.l_name) as employeer_name,							_positions.name as position_name,							_emp_to_positions_rows._filials_rid,							DATE_FORMAT(_documents.modifyDT, \'%d.%m.%Y %H:%i\') as modifyDT, 							_documents.descr as descr, _documents.archive, _documents.owner_users_rid', False);		$this->db->from('_documents');		$this->db->join('_emp_to_positions_headers', '_emp_to_positions_headers._documents_rid = _documents.rid');		$this->db->join('_emp_to_positions_rows', '_emp_to_positions_rows._emp_to_positions_headers_rid = _emp_to_positions_headers.rid');		$this->db->join('_employeers', '_emp_to_positions_rows._employeers_rid = _employeers.rid');		$this->db->join('_positions', '_emp_to_positions_rows._positions_rid = _positions.rid');		$this->db->where(array('_documents.rid'=>$rid));		$query = $this->db_get('_documents');		return $query->num_rows()?$query->row():False;	}		public function create_record(){		$ins_doc = array('doc_type'=>$this->ci->get_typedoc(), 							'descr'=>$this->ci->input->post('descr'),							'archive'=>$this->ci->input->post('archive'),							'owner_users_rid'=>get_curr_urid(),							'modifier_users_rid'=>get_curr_urid());		$this->db->set('createDT', 'now()', False);		$this->db->set('modifyDT', 'now()', False);		$this->db->trans_begin();		$this->db->insert('_documents', $ins_doc);		$doc_rid = $this->db->insert_id();		$ins_h = array('date_doc'=>date('Y-m-d', strtotime($this->ci->input->post('date_doc'))),								'_documents_rid'=>$doc_rid,								'owner_users_rid'=>get_curr_urid(),								'modifier_users_rid'=>get_curr_urid());		$this->db->set('createDT', 'now()', False);		$this->db->set('modifyDT', 'now()', False);		$this->db->insert('_emp_to_positions_headers', $ins_h);		$ins_r = array('_emp_to_positions_headers_rid'=>$this->db->insert_id(),							'_employeers_rid'=>$this->ci->input->post('_employeers_rid'),							'_positions_rid'=>$this->ci->input->post('_positions_rid'),							'_filials_rid'=>$this->ci->input->post('_filials_rid'),							'_currencies_rid'=>$this->ci->input->post('_currencies_rid'),							'salary'=>$this->ci->input->post('salary'),							'bdate'=>date('Y-m-d', strtotime($this->ci->input->post('bdate'))),							'owner_users_rid'=>get_curr_urid(),							'modifier_users_rid'=>get_curr_urid());		$this->db->set('createDT', 'now()', False);		$this->db->set('modifyDT', 'now()', False);		$this->db->insert('_emp_to_positions_rows', $ins_r);		if ($this->db->trans_status() === FALSE){	   		$this->db->trans_rollback();    		return False;		}else{    		$this->db->trans_commit();    		return $doc_rid;		}			}		public function update_record(){		$update_doc = array('doc_type'=>$this->ci->get_typedoc(), 							'descr'=>$this->ci->input->post('descr'),							'archive'=>$this->ci->input->post('archive'),							'modifier_users_rid'=>get_curr_urid());		$this->db->set('modifyDT', 'now()', False);		$this->db->trans_begin();		$this->db->update('_documents', $update_doc, array('_documents.rid'=>$this->ci->input->post('rid')));		$update_h = array('date_doc'=>date('Y-m-d', strtotime($this->ci->input->post('date_doc'))),								'modifier_users_rid'=>get_curr_urid());		$this->db->set('modifyDT', 'now()', False);		$this->db->update('_emp_to_positions_headers', $update_h, array('_emp_to_positions_headers._documents_rid'=>$this->ci->input->post('rid')));		$query = $this->db->getwhere('_emp_to_positions_headers', array('_emp_to_positions_headers._documents_rid'=>$this->ci->input->post('rid')));		if(!$query->num_rows()) {			$this->db->trans_rollback();    		return False;		}		$row = $query->row();		$update_r = array('_employeers_rid'=>$this->ci->input->post('_employeers_rid'),							'_positions_rid'=>$this->ci->input->post('_positions_rid'),							'_filials_rid'=>$this->ci->input->post('_filials_rid'),							'_currencies_rid'=>$this->ci->input->post('_currencies_rid'),							'salary'=>$this->ci->input->post('salary'),							'bdate'=>date('Y-m-d', strtotime($this->ci->input->post('bdate'))),							'modifier_users_rid'=>get_curr_urid());		$this->db->set('modifyDT', 'now()', False);				$this->db->update('_emp_to_positions_rows', $update_r, array('_emp_to_positions_rows._emp_to_positions_headers_rid'=>$row->rid));		if ($this->db->trans_status() === FALSE){    		$this->db->trans_rollback();    		return False;		}else{    		$this->db->trans_commit();    		return $this->ci->input->post('rid');		}			}		public function move_record(){		$update_doc = array('owner_users_rid'=>get_urid_byemprid($this->ci->input->post('_employeers_rid')));		$this->db->set('modifyDT', 'now()', False);		$this->db->trans_begin();		$this->db->update('_documents', $update_doc, array('_documents.rid'=>$this->ci->input->post('rid')));		if ($this->db->trans_status() === FALSE){    		$this->db->trans_rollback();    		return False;		}else{    		$this->db->trans_commit();    		return $this->ci->input->post('rid');		}			}	}?>