<?phpinclude_once APPPATH."libraries/core/Crmmodel.php";class Hotels_model extends Crmmodel{	public function __construct(){		parent::__construct();	}
	public function get_ds(){		$this->db->select('SQL_CALC_FOUND_ROWS _hotels.rid as rid, _hotels.hotel_name,							_curourts.curourt_name as curourt_name,							_countries.country_name as country_name,							CONCAT(_hotels.hotel_name, \' \', _hotelscats.hotelcat_name) as hotel_full_name,							_hotelscats.hotelcat_name,  							DATE_FORMAT(_hotels.modifyDT, \'%d.%m.%Y\') as modifyDT, 							_hotels.descr as descr, _hotels.archive', False);		$this->db->from('_hotels');		$this->db->join('_countries','_hotels._countries_rid = _countries.rid');		$this->db->join('_curourts','_hotels._curourts_rid = _curourts.rid', 'LEFT');		$this->db->join('_hotelscats','_hotels._hotelscats_rid = _hotelscats.rid');		if($searchRule = element('like', $this->ci->get_session('searchrule'), null)) $this->db->like($searchRule);		if($searchRule = element('where', $this->ci->get_session('searchrule'), null)) $this->db->where($searchRule);		if($searchRule = element('having', $this->ci->get_session('searchrule'), null)) $this->db->having($searchRule);		if($sort = $this->ci->get_session('sort'))	$this->db->orderby($sort['c'], $sort['r']);		$this->db->limit($this->ci->config->item('crm_grid_limit'), element('p', $this->ci->a_uri_assoc, null));		$query = $this->db->get();		return $query->num_rows()?$query->result():array();	}
		public function get_edit($rid){		$this->db->select('_hotels.rid as rid, _hotels.hotel_name,		 					_hotels._curourts_rid,		 					_hotels._countries_rid,		 					_hotels._hotelscats_rid, 							_curourts.curourt_name as curourt_name,							_countries.country_name as country_name,							_hotelscats.hotelcat_name,  							CONCAT(_hotels.hotel_name, \' \', _hotelscats.hotelcat_name) as hotel_full_name,							DATE_FORMAT(_hotels.modifyDT, \'%d.%m.%Y\') as modifyDT, 							_hotels.owner_users_rid,							_hotels.descr as descr, _hotels.archive', False);		$this->db->from('_hotels');		$this->db->join('_countries','_hotels._countries_rid = _countries.rid');		$this->db->join('_curourts','_hotels._curourts_rid = _curourts.rid', 'LEFT');		$this->db->join('_hotelscats','_hotels._hotelscats_rid = _hotelscats.rid');		$this->db->where(array('_hotels.rid'=>$rid));		$query = $this->db_get('_hotels');		return $query->num_rows()?$query->row():False;	}
		public function create_record(){		$ins_arr = array('hotel_name'=>$this->ci->input->post('hotel_name'),							'_hotelscats_rid'=>$this->ci->input->post('_hotelscats_rid'),							'_curourts_rid'=>$this->ci->input->post('_curourts_rid')?$this->ci->input->post('_curourts_rid'):null,							'_countries_rid'=>$this->ci->input->post('_countries_rid'),									'descr'=>$this->ci->input->post('descr'),							'archive'=>$this->ci->input->post('archive'),							'owner_users_rid'=>get_curr_urid(),							'modifier_users_rid'=>get_curr_urid());		$this->db->set('createDT', 'now()', False);		$this->db->set('modifyDT', 'now()', False);		$this->db->trans_begin();		$this->db->insert('_hotels', $ins_arr);		$insRid = $this->db->insert_id();		if ($this->db->trans_status() === FALSE){    		$this->db->trans_rollback();    		return False;		}else{    		$this->db->trans_commit();    		return $insRid;		}			}
		public function update_record(){		$update_arr = array('hotel_name'=>$this->ci->input->post('hotel_name'),							'_hotelscats_rid'=>$this->ci->input->post('_hotelscats_rid'),							'_curourts_rid'=>$this->ci->input->post('_curourts_rid')?$this->ci->input->post('_curourts_rid'):null,							'_countries_rid'=>$this->ci->input->post('_countries_rid'),									'descr'=>$this->ci->input->post('descr'),							'archive'=>$this->ci->input->post('archive'),							'modifier_users_rid'=>get_curr_urid());		$this->db->set('modifyDT', 'now()', False);		$this->db->trans_begin();		$this->db->update('_hotels', $update_arr, array('rid'=>$this->ci->input->post('rid')));		if ($this->db->trans_status() === FALSE){    		$this->db->trans_rollback();    		return False;		}else{    		$this->db->trans_commit();    		return True;		}			}
		public function remove_items(){		$this->db->trans_begin();		foreach($this->ci->input->post('row') as $rid){			$this->db->delete('_hotels', array('rid'=>$rid));			}		if ($this->db->trans_status() === FALSE){    		$this->db->trans_rollback();    		return False;		}else{    		$this->db->trans_commit();    		return True;		}			}

	public function check_unique_name($name, $rid=null){		$this->db->select('count(*) as quan');		$this->db->from('_hotels');		$this->db->where(array('_hotels.hotel_name'=>$name));		if($rid) $this->db->where(array('_hotels.rid != '=>$rid));		$query = $this->db->get();		if($query->row()->quan) return True;		/* проверка в базе синонимов */		$this->db->select('count(*) as quan');		$this->db->from('_hotelssynonims');		$this->db->where(array('_hotelssynonims.hotel_name'=>$name));		if($rid) $this->db->where(array('_hotels_rid != '=>$rid));		$query = $this->db->get();		return $query->row()->quan;	}
	
	public function move_record(){		$update_doc = array('owner_users_rid'=>get_urid_byemprid($this->ci->input->post('_employeers_rid')));		$this->db->set('modifyDT', 'now()', False);		$this->db->trans_begin();		$this->db->update('_hotels', $update_doc, array('_hotels.rid'=>$this->ci->input->post('rid')));		if ($this->db->trans_status() === FALSE){    		$this->db->trans_rollback();	   		return False;		}else{    		$this->db->trans_commit();    		return $this->ci->input->post('rid');		}			}		public function get_hotelname_byrid($rid){		$this->db->select('_hotels.hotel_name as hotel_name, CONCAT(_hotels.hotel_name, \' \', _hotelscats.hotelcat_name) as hotel_full_name', False);		$this->db->from('_hotels');		$this->db->join('_hotelscats','_hotels._hotelscats_rid = _hotelscats.rid');		$this->db->where(array('_hotels.rid'=>$rid));		$this->db->order_by('hotel_name');		$query = $this->db->get();		return $query->num_rows()?$query->row()->hotel_full_name:null; 	}	public function get_synonims($rid){		$this->db->select('_hotelssynonims.*');		$this->db->from('_hotelssynonims');		$this->db->where(array('_hotelssynonims._hotels_rid'=>$rid));		$this->db->order_by('_hotelssynonims.hotel_name');		$query = $this->db->get();		return $query->num_rows()?$query->result():array(); 	}		public function add_synonim(){		$ins_arr = array('hotel_name'=>$this->ci->input->post('hotel_name'),							'_hotels_rid'=>$this->ci->input->post('_hotels_rid'),							'descr'=>$this->ci->input->post('descr'),							'archive'=>$this->ci->input->post('archive'),							'owner_users_rid'=>get_curr_urid(),							'modifier_users_rid'=>get_curr_urid());		$this->db->set('createDT', 'now()', False);		$this->db->set('modifyDT', 'now()', False);		$this->db->trans_begin();		$this->db->insert('_hotelssynonims', $ins_arr);		$insRid = $this->db->insert_id();		if ($this->db->trans_status() === FALSE){    		$this->db->trans_rollback();    		return False;		}else{    		$this->db->trans_commit();    		return $insRid;		}			}		public function remove_synonim(){		$this->db->trans_begin();		$this->db->delete('_hotelssynonims', array('rid'=>$this->ci->input->post('rid')));			if ($this->db->trans_status() === FALSE){    		$this->db->trans_rollback();    		return False;		}else{    		$this->db->trans_commit();    		return True;		}			}		public function get_attaches($_hotels_rid){		$this->db->select('_attaches.*, _hotels_attaches.rid as dattach_rid');		$this->db->from('_attaches');		$this->db->join('_hotels_attaches', '_hotels_attaches._attaches_rid = _attaches.rid');		$this->db->where(array('_hotels_attaches._hotels_rid'=>$_hotels_rid));		$this->db->order_by('_attaches.rid');		$query = $this->db->get();		return $query->num_rows()?$query->result():array();	}		public function addattach(){		$this->db->trans_begin();		$upload_data = $this->ci->upload->data();		$ins_r = array('file_descr'=>$this->ci->input->post('upload_descr')?$this->ci->input->post('upload_descr'):$upload_data['file_name'],						'file_name'=>$upload_data['file_name'],						'file_type'=>$upload_data['file_type'],						'file_size'=>$upload_data['file_size'],						'file_path'=>$upload_data['file_path'],						'raw_name' =>$upload_data['raw_name'],						'file_ext' =>$upload_data['file_ext'],						'is_image' =>$upload_data['is_image'],						'image_width'=>$upload_data['image_width'],						'image_height'=>$upload_data['image_height'],						'image_type'=>$upload_data['image_type'],						'image_size_str'=>$upload_data['image_size_str']);		/* { create thumbnails */		$config['image_library'] = 'gd2';		$config['source_image'] = $upload_data['file_path'].'/'.$upload_data['file_name'];		$config['create_thumb'] = TRUE;		$config['maintain_ratio'] = TRUE;		$config['width'] = 120;		$config['height'] = 120;		$this->ci->load->library('image_lib', $config);		$this->ci->image_lib->resize();		/* } create thumbnails */				$this->db->insert('_attaches', $ins_r);		$attach_rid = $this->db->insert_id();		$ins_r = array('_hotels_rid'=>$this->ci->input->post('_hotels_rid'),						'_attaches_rid'=>$attach_rid);		$this->db->insert('_hotels_attaches', $ins_r);		if ($this->db->trans_status() === FALSE){    		$this->db->trans_rollback();    		return False;		}else{    		$this->db->trans_commit();    		return True;		}			}		public function removeattach($rid){		$this->db->trans_begin();		$query = $this->db->select('*')->from('_attaches')->where(array('rid'=>$rid))->get();		if($query->num_rows()){			$row = $query->row();			@unlink($row->file_path.$row->file_name);			@unlink($row->file_path.$row->raw_name.'_thumb'.$row->file_ext);		}		$this->db->delete('_attaches', array('rid'=>$rid));			if ($this->db->trans_status() === FALSE){    		$this->db->trans_rollback();    		return False;		}else{    		$this->db->trans_commit();    		return True;		}			}		/**	 * Проверка принадлежности курорта стране	 * 	 * @param $_countries_rid RID страны	 * @param $_curourts_rid RID курорта	 * @return boolean	 */	public function is_hotel_place($_countries_rid, $_curourts_rid, $_hotels_rid){		$this->db->select('rid');		$this->db->from('_hotels');		$this->db->where(array('_countries_rid'=>$_countries_rid, '_curourts_rid'=>$_curourts_rid, 'rid'=>$_hotels_rid));		$query = $this->db->get();		return $query->num_rows()?True:False;	}		}
?>