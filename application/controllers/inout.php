<?php/** * TravelCRM * * An open source CRM system for travel agencies * * @author		Mazvv (vitalii.mazur@gmail.com) * @license		GNU GPLv3 (http://gplv3.fsf.org)  * @link		http://www.travelcrm.org.ua */include_once APPPATH."libraries/core/Doccontroller.php";class Inout extends Doccontroller {	public function __construct(){		parent::__construct();		$this->lang->load('inout');		$this->load->model('inout_model');		$this->load->helper('finjournal');		$this->load->helper('accountstates');	}		public function _remap($m_Name){		switch ($m_Name) {			case 'create': {$this->create();break;}			case 'edit': {$this->edit();break;}			case 'details': {$this->details();break;}			case 'remove': {$this->remove();break;}			case 'move': {$this->move();break;}			case 'sort': {$this->sort();break;}			case 'limit': {$this->limit();break;}			case 'help': {$this->help(); break;}			default: $this->index();		}	}		public function journal(){		$data = array();		$data['title'] = lang('INOUT_TITLE');		$data['orid'] = $this->get_orid();		$data['sort'] = $this->get_session('sort');		$data['find'] = $this->find();		$data['fields']['rid'] = array('label'=>'Id', 'colwidth'=>'5%', 'sort'=>True); 		$data['fields']['date_doc'] =  array('label'=>lang('DATE_DOC'), 'colwidth'=>'30%', 'sort'=>True);		$data['fields']['sum'] =  array('label'=>lang('SUM'), 'colwidth'=>'40%', 'sort'=>True); 		$data['fields']['archive'] = array('label'=>lang('ARCHIVE'), 'colwidth'=>'5%', 'sort'=>True, 'type'=>'yes_no'); 		$data['fields']['modifyDT'] = array('label'=>lang('MODIFYDT'), 'colwidth'=>'25%', 'sort'=>True); 		$data['tools'] = $this->get_tools(); 		$data['ds'] = $this->inout_model->get_ds();		$data['paging'] = $this->get_paging($this->inout_model->get_calc_rows());		return $this->load->view('standart/grid', $data, True);			}		private function create(){		$data = array();		$this->set_validation();		$data['title'] = lang('INOUT_TITLE_CREATE');		$data['orid'] = $this->get_orid();		$data['success'] = null;		if ($this->form_validation->run() === True){			if($rid = $this->inout_model->create_record()){				$this->session->set_flashdata('success', True);				redirect(get_currcontroller()."/edit/$rid", 'refresh');				return;			}			else {				$data['success'] = false;			} 		}		$data['content'] = $this->load->view('inout/create', $data, True);		return $this->load->view('layouts/main_layout', $data);	}		private function edit(){		$rid = (int)$this->uri->segment(3);		if(!$rid) show_404();		$data = array();		$this->set_validation();		$data['title'] = lang('INOUT_TITLE_EDIT');		$data['rid'] = $rid;		$data['orid'] = $this->get_orid();		$data['ds'] = $this->inout_model->get_edit($rid);		$data['success'] = $this->session->flashdata('success')?$this->session->flashdata('success'):null;		if(!$data['ds']) show_404(); 		if ($this->form_validation->run() === True){			if($this->inout_model->update_record()) $data['success'] = true;			else $data['success'] = false;			$data['ds'] = $this->inout_model->get_edit($rid);		}		$data['content'] = $this->load->view('inout/edit', $data, True);		return $this->load->view('layouts/main_layout', $data);	}		private function details(){		$rid = (int)$this->uri->segment(3);		if(!$rid) show_404();		$data = array();		$data['title'] = lang('INOUT_TITLE_DETAILS');		$data['rid'] = $rid;		$data['orid'] = $this->get_orid();		$data['ds'] = $this->inout_model->get_edit($rid);		if(!$data['ds']) show_404(); 		$data['content'] = $this->load->view('inout/details', $data, True);		return $this->load->view('layouts/main_layout', $data);	}	private function find(){		$data['orid'] = $this->get_orid();		$this->form_validation->set_rules('rid', 'Id', 'trim');		$this->form_validation->set_rules('doc_from', lang('DOC_FROM'), 'trim');		$this->form_validation->set_rules('doc_to', lang('DOC_TO'), 'trim');		$this->form_validation->set_rules('oper_date_from', lang('OPER_DATE_FROM'), 'trim');		$this->form_validation->set_rules('oper_date_to', lang('OPER_DATE_TO'), 'trim');		$this->form_validation->set_rules('_account_states_rid', lang('STATE'), 'trim');		$this->form_validation->set_rules('_filials_rid', lang('FILIAL'), 'trim');		$this->form_validation->set_rules('_employeers_rid', lang('EMPLOYEER'), 'trim');			$this->form_validation->set_rules('archive', lang('HIDE_ARCHIVE'), 'trim');			if ($this->form_validation->run() == True){			$search_rule = array();			if($this->input->post('rid')) $search_rule['where']['_documents.rid'] = $this->input->post('rid');			if($this->input->post('doc_from')) $search_rule['where']['_inout_headers.date_doc >='] = date('Y-m-d', strtotime($this->input->post('doc_from')));			if($this->input->post('doc_to')) $search_rule['where']['_inout_headers.date_doc <='] = date('Y-m-d', strtotime($this->input->post('doc_to')));			if($this->input->post('oper_date_from')) $search_rule['where']['_finjournal.oper_date >='] = date('Y-m-d', strtotime($this->input->post('oper_date_from')));			if($this->input->post('oper_date_to')) $search_rule['where']['_finjournal.oper_date <='] = date('Y-m-d', strtotime($this->input->post('oper_date_to')));			if($this->input->post('_filials_rid')) $search_rule['having']['_filials_rid'] = $this->input->post('_filials_rid');			if($this->input->post('_employeers_rid')) $search_rule['where']['_employeers.rid'] = $this->input->post('_employeers_rid');			if($this->input->post('_account_states_rid')) $search_rule['where']['_finjournal._account_states_rid'] = $this->input->post('_account_states_rid');			if($this->input->post('archive')==0) $search_rule['where']['_documents.archive'] = $this->input->post('archive');			$this->set_searchrule($search_rule);		}		$search = $this->get_session('searchrule');		$data['search'] = array_merge(element('like', $search, array()), element('where', $search, array()), element('having', $search, array()));		return $this->load->view('inout/find', $data, True);	}	private function move(){		$rid = (int)$this->uri->segment(3);		if(!$rid) show_404();		$data = array();		$this->form_validation->set_rules('_employeers_rid', lang('NEW_OWNER'), 'required');		$data['title'] = lang('INOUT_TITLE_MOVE');		$data['rid'] = $rid;		$data['orid'] = $this->get_orid();		$data['ds'] = $this->inout_model->get_edit($rid);		$data['success'] = $this->session->flashdata('success')?$this->session->flashdata('success'):null;		if(!$data['ds']) show_404(); 		if ($this->form_validation->run() === True){			if($this->inout_model->move_record()) $data['success'] = true;			else $data['success'] = false;			$data['ds'] = $this->inout_model->get_edit($rid);		}		$data['content'] = $this->load->view('standart/move', $data, True);		return $this->load->view('layouts/main_layout', $data);	}			private function set_validation(){		$this->form_validation->set_rules('date_doc', lang('DATE_DOC'), 'required');		$this->form_validation->set_rules('descr', lang('DESCR'), 'trim|max_length[512]');		$this->form_validation->set_rules('archive', lang('ARCHIVE'), 'trim');		return;			}}