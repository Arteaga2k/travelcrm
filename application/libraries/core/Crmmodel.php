<?php/** * TravelCRM * * An open source CRM system for travel agencies * * @package		Core * @author		mazvv * @license		GNU GPLv3 (http://gplv3.fsf.org)  * @link		http://code.google.com/p/travelcrm/ *//** * Abstract model class, base for all models *  * @author mazvv * @package Libraries * @subpackage Core */abstract class Crmmodel extends Model{	protected $ci; # global Codeigniter object		public function __construct() {		parent::Model();		# get global Codeigniter object		$this->ci = &get_instance();	}
		/**	 * Get Rows Quan	 * 	 * Get total rows in recordset	 * 	 * @access public	 * @return int	 */	public function get_calc_rows(){		return $this->db->select('FOUND_ROWS() as rquan')->get()->row()->rquan;	}		/**	 * Get secured recordset 	 * 	 * Get available records useng security subsystem	 *  	 * @param $p_fromTable query object	 * @return query object 	 */	public function db_get($p_fromTable, $p_controllerName = null){		if($area = $this->ci->menu->get_allowed_area($p_controllerName)){			switch ($area){				case 'FILIAL':{					/*					 * When for filials only					 * */					$this->db->join('_users U_R', "{$p_fromTable}.owner_users_rid = U_R.rid and U_R.archive = 0");					$this->db->join('_employeers E_R', "U_R._employeers_rid = E_R.rid and E_R.archive = 0");					$this->db->join('_filials F_R', 'F_R.rid = (select _emp_to_positions_rows._filials_rid 									from _emp_to_positions_rows join _filials on _emp_to_positions_rows._filials_rid = _filials.rid 									where _emp_to_positions_rows._employeers_rid = E_R.rid and _emp_to_positions_rows.bdate<=\''.date('Y-m-d').'\' order by _emp_to_positions_rows.bdate DESC limit 1)');					$this->db->where(array('F_R.rid'=>$this->ci->user->get_ufrid()));					break;				}				case 'OWN':{					/*					 * When for own only					 * */					$this->db->join('_users U_R', "{$p_fromTable}.owner_users_rid = U_R.rid and U_R.archive = 0");					$this->db->where(array('U_R.rid'=>$this->ci->user->get_urid()));					break;				}				default: {break;}			}		}				return $this->db->get();	}}
?>